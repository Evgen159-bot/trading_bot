#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π
"""

import sys
from pathlib import Path
from user_config import UserConfig


class StrategySelector:
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""

    def __init__(self):
        self.user_config = UserConfig()

    def show_strategy_menu(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
        print("\n" + "=" * 70)
        print("üéØ –í–´–ë–û–† –¢–û–†–ì–û–í–û–ô –°–¢–†–ê–¢–ï–ì–ò–ò")
        print("=" * 70)

        strategies = self.user_config.AVAILABLE_STRATEGIES

        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:")
        print()

        for i, (strategy_id, info) in enumerate(strategies.items(), 1):
            risk_emoji = {"low": "üü¢", "medium": "üü°", "high": "üî¥"}.get(info['risk_level'], "‚ö™")
            type_emoji = "üõ†Ô∏è" if info['type'] == 'configurable' else "ü§ñ"
            selected = "üëâ " if strategy_id == self.user_config.SELECTED_STRATEGY else "   "

            print(f"{selected}{i}. {type_emoji} {info['name']} {risk_emoji}")
            print(f"     üìù {info['description']}")
            print(f"     ‚è∞ –¢–∞–π–º—Ñ—Ä–µ–π–º: {info['timeframe']} | üéØ {info['best_for']}")
            print()

        print("=" * 70)

    def interactive_selection(self):
        """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
        while True:
            self.show_strategy_menu()

            print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
            print("1-8. –í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é")
            print("9. –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
            print("10. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é")
            print("0. –í—ã—Ö–æ–¥")

            choice = input("\n–í–∞—à –≤—ã–±–æ—Ä: ").strip()

            if choice == "0":
                break
            elif choice == "9":
                self.user_config.print_config_summary()
            elif choice == "10":
                self.configure_custom_strategy()
            elif choice.isdigit() and 1 <= int(choice) <= 8:
                self.select_strategy(int(choice))
            else:
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

    def select_strategy(self, choice: int):
        """–í—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø–æ –Ω–æ–º–µ—Ä—É"""
        strategies = list(self.user_config.AVAILABLE_STRATEGIES.keys())

        if 1 <= choice <= len(strategies):
            selected_strategy = strategies[choice - 1]
            strategy_info = self.user_config.AVAILABLE_STRATEGIES[selected_strategy]

            print(f"\n‚úÖ –í—ã–±—Ä–∞–Ω–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è: {strategy_info['name']}")
            print(f"üìù {strategy_info['description']}")

            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è user_config.py
            print(f"\nüîß –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
            print(f"   –ò–∑–º–µ–Ω–∏—Ç–µ SELECTED_STRATEGY = '{selected_strategy}' –≤ —Ñ–∞–π–ª–µ user_config.py")

            if selected_strategy == 'custom':
                print(f"   –¢–∞–∫–∂–µ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ CUSTOM_STRATEGY_CONFIG –≤ —Ç–æ–º –∂–µ —Ñ–∞–π–ª–µ")
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")

    def configure_custom_strategy(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"""
        print("\n" + "=" * 50)
        print("üõ†Ô∏è –ù–ê–°–¢–†–û–ô–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–û–ô –°–¢–†–ê–¢–ï–ì–ò–ò")
        print("=" * 50)

        config = self.user_config.CUSTOM_STRATEGY_CONFIG

        print("–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"üìä RSI –ø–µ—Ä–∏–æ–¥: {config['rsi_settings']['period']}")
        print(
            f"üìä MACD: {config['macd_settings']['fast_period']}/{config['macd_settings']['slow_period']}/{config['macd_settings']['signal_period']}")
        print(
            f"üìä EMA: {config['ema_settings']['fast_period']}/{config['ema_settings']['slow_period']}/{config['ema_settings']['trend_period']}")
        print(f"üéØ –†–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É: {config['risk_management']['risk_per_trade'] * 100:.1f}%")
        print(f"üõë –ú–∞–∫—Å. —Å—Ç–æ–ø-–ª–æ—Å—Å: {config['risk_management']['max_stop_loss_pct'] * 100:.1f}%")
        print(f"üí∞ –ú–∏–Ω. —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: {config['risk_management']['min_take_profit_pct'] * 100:.1f}%")

        print("\nüí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ CUSTOM_STRATEGY_CONFIG –≤ user_config.py")
        print("üìö –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å–º. –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ —Ñ–∞–π–ª—É")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    selector = StrategySelector()

    if len(sys.argv) > 1:
        if sys.argv[1] == '--list':
            selector.show_strategy_menu()
        elif sys.argv[1] == '--interactive':
            selector.interactive_selection()
        elif sys.argv[1] == '--custom':
            selector.configure_custom_strategy()
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python utils/strategy_selector.py --list        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π")
            print("  python utils/strategy_selector.py --interactive # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä")
            print("  python utils/strategy_selector.py --custom      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
    else:
        selector.interactive_selection()


if __name__ == "__main__":
    main()