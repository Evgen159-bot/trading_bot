#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–º–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
"""

import sys
from pathlib import Path
from datetime import datetime, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from modules.data_fetcher import DataFetcher
from user_config import UserConfig


class VolumeOptimizer:
    """–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –æ–±—ä–µ–º–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤"""

    def __init__(self):
        self.data_fetcher = DataFetcher()

    def analyze_volume_patterns(self):
        """–ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –æ–±—ä–µ–º–∞ –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä"""
        print("üìä –ê–ù–ê–õ–ò–ó –û–ë–™–ï–ú–ù–´–• –ü–ê–¢–¢–ï–†–ù–û–í")
        print("=" * 50)

        enabled_pairs = UserConfig.get_enabled_pairs()

        for symbol in enabled_pairs:
            print(f"\nüìà –ê–Ω–∞–ª–∏–∑ {symbol}:")

            try:
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
                end_time = datetime.now()
                start_time = end_time - timedelta(days=1)

                df = self.data_fetcher.get_kline(
                    symbol=symbol,
                    interval='5',
                    start_time=int(start_time.timestamp()),
                    end_time=int(end_time.timestamp())
                )

                if df is None or len(df) == 0:
                    print(f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {symbol}")
                    continue

                # –ê–Ω–∞–ª–∏–∑ –æ–±—ä–µ–º–æ–≤
                df['volume_sma'] = df['volume'].rolling(20).mean()
                df['volume_ratio'] = df['volume'] / df['volume_sma']

                # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                avg_volume_ratio = df['volume_ratio'].mean()
                max_volume_ratio = df['volume_ratio'].max()
                min_volume_ratio = df['volume_ratio'].min()
                current_volume_ratio = df['volume_ratio'].iloc[-1]

                # –ü—Ä–æ—Ü–µ–Ω—Ç —Å–≤–µ—á–µ–π —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –æ–±—ä–µ–º–æ–º
                sufficient_volume_1_1 = (df['volume_ratio'] > 1.1).sum() / len(df) * 100
                sufficient_volume_0_8 = (df['volume_ratio'] > 0.8).sum() / len(df) * 100
                sufficient_volume_0_5 = (df['volume_ratio'] > 0.5).sum() / len(df) * 100

                print(f"   üìä –°—Ä–µ–¥–Ω–∏–π Volume Ratio: {avg_volume_ratio:.2f}")
                print(f"   üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π: {max_volume_ratio:.2f}")
                print(f"   üìâ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π: {min_volume_ratio:.2f}")
                print(f"   üîÑ –¢–µ–∫—É—â–∏–π: {current_volume_ratio:.2f}")
                print(f"   ‚úÖ –°–≤–µ—á–µ–π —Å –æ–±—ä–µ–º–æ–º > 1.1: {sufficient_volume_1_1:.1f}%")
                print(f"   ‚úÖ –°–≤–µ—á–µ–π —Å –æ–±—ä–µ–º–æ–º > 0.8: {sufficient_volume_0_8:.1f}%")
                print(f"   ‚úÖ –°–≤–µ—á–µ–π —Å –æ–±—ä–µ–º–æ–º > 0.5: {sufficient_volume_0_5:.1f}%")

                # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
                if sufficient_volume_1_1 < 20:
                    print(
                        f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–Ω–∏–∑–∏—Ç—å min_ratio –¥–æ 0.8 (—Ç–æ–ª—å–∫–æ {sufficient_volume_1_1:.1f}% —Å–≤–µ—á–µ–π –ø—Ä–æ—Ö–æ–¥—è—Ç)")
                elif sufficient_volume_1_1 > 60:
                    print(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ú–æ–∂–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å min_ratio –¥–æ 1.3")
                else:
                    print(f"   ‚úÖ –¢–µ–∫—É—â–∏–π –ø–æ—Ä–æ–≥ 1.1 –ø–æ–¥—Ö–æ–¥–∏—Ç")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ {symbol}: {e}")

    def recommend_optimal_settings(self):
        """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"""
        print("\n" + "=" * 60)
        print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò")
        print("=" * 60)

        print("üìä –ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –æ–±—ä–µ–º–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è:")
        print()
        print("1. üìâ –°–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—ä–µ–º—É:")
        print("   'min_ratio': 0.8,  # –í–º–µ—Å—Ç–æ 1.1")
        print()
        print("2. üéØ –°–Ω–∏–∑–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É—Å–ª–æ–≤–∏—è–º:")
        print("   'min_conditions_required': 1,  # –í–º–µ—Å—Ç–æ 2")
        print()
        print("3. ‚è±Ô∏è –£–º–µ–Ω—å—à–∏—Ç—å cooldown:")
        print("   'signal_cooldown': 60,  # –í–º–µ—Å—Ç–æ 180")
        print()
        print("4. üîÑ –£–≤–µ–ª–∏—á–∏—Ç—å —á–∞—Å—Ç–æ—Ç—É –ø—Ä–æ–≤–µ—Ä–æ–∫:")
        print("   'cycle_interval': 30,  # –í–º–µ—Å—Ç–æ 60")
        print()
        print("üéØ –≠—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–≤–µ–ª–∏—á–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ 3-5 —Ä–∞–∑!")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    optimizer = VolumeOptimizer()

    try:
        optimizer.analyze_volume_patterns()
        optimizer.recommend_optimal_settings()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")


if __name__ == "__main__":
    main()